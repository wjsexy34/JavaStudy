
class Car{
	//타입필드명
	String name;
	int number;
	
	/* Car객체가 만들어질때 반드시 이름을 갖고 만들어지게 하고싶다면.
	 * 아래와 같이 이름을 받아들일 수 있는 매개변수를 하나 받는 생성자를 만든 후
	 * 그때 받은 매개변수를 Car의 속성인 name에 넣어주게 한다.
	 *  
  */
	public Car(String n) {
		name = n;
	}
	
}

public class ConstructorExam {

	public static void main(String[] args) {
/* 
 * 생성자를 선언하는 부분에 return타입을 갖고 있지 않다.
 * 생성자를 개발자가 만들지 않는다면 매개변수가 없는 생성자가 컴파일시 자동으로 만들어짐.
 * 매개변수가 없는 생성자를 '기본 생성자'라 한다.
 * 생성자를 하나라도 만들었다면 기본생성자는 자동으로 만들어지지 않는다.
 * 어떤 객체가 만들어질때 반드시 처음부터 뭔가 값을 갖고 만들어지길 원할수도있다
 * "생성자가 하는 일은 객체가 될때 필드를 초기화 하는 역할을 수행하는것."
 * 
 * */
		
/*
 * 사용자가 생성자를 하나라도 추가했더니 기본생성자는 만들어지지 않아서 오류 발생.
 * 더이상 기본생성자를 이용해서 Car객체를 생성할 수는 없다.
 *
 * */
	//Car c1 = new Car();  - new Car(); -> 생성자.

		/* 사용자가 정의한 생성자를 이용해서 만들기. */
		/* 정의한 생성자는 매개변수로 String값을 받기 때문에 값을 넣어준다. */
		Car c2 = new Car("소방차");
		Car c3 = new Car("구급차");
		
		/* name의 값이 소방차,구급차로 초기화 된것을 볼 수 있다. */
		System.out.println(c2.name);
		System.out.println(c3.name);
	}

}
